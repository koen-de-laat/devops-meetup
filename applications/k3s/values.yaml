replicaCount: 1

image:
  repository: rancher/k3s
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  roleName: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  privileged: true

service:
  type: LoadBalancer
  hostname: ""
  domains: []
  ingressRouteTCP: false

serviceAnnotations: {}
#  service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"
#  service.beta.kubernetes.io/aws-load-balancer-internal: "false"

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 2Gi

nodeSelector:
  kubernetes.io/arch: amd64

tolerations: []

affinity: {}

storage:
  storageClassName: nfs
  storageClassNameK3s: ""
  size:
    config: 10Mi
    server: 100Gi

oidc:
  enabled: false

cert:
  subject: {}

postgresql:
  enabled: true
  fullnameOverride: postgresql
  auth:
    postgresPassword: MyDbPassword
    database: kubernetes
  commonAnnotations:
    argocd.argoproj.io/sync-wave: "1"
  primary:
    persistence:
      storageClass: nfs
      existingClaim: postgresql-claim


argoCD:
  enabled: true
  namespace: argocd
  appNamespace: ""
  cluster:
    labels: {}
  project:
    name: ""
    groups:
      - "koen-de-laat:admin"
  applications:
    targetRevision: $ARGOCD_APP_SOURCE_TARGET_REVISION
    annotations:
      argocd.argoproj.io/sync-wave: "6"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - CreateNamespace=true
    specs:
      cert-manager:
        repoUrl: https://charts.jetstack.io
        chart: cert-manager
        targetRevision: v1.17.2
        finalizers: false
        annotations:
          argocd.argoproj.io/sync-wave: "4"
        values:
          installCRDs: true
        injectHost: false
      cert-issuers:
        repoUrl: https://github.com/koen-de-laat/devops-meetup
        path: applications/cert-issuers
        namespace: cert-manager
        targetRevision: HEAD
        annotations:
          argocd.argoproj.io/sync-wave: "5"
      my-apps:
        repoUrl: https://github.com/koen-de-laat/devops-meetup
        path: applications/my-apps
        targetRevision: $ARGOCD_APP_SOURCE_TARGET_REVISION
        project: default
        destination:
          namespace: argocd
          server: https://kubernetes.default.svc
        injectHost: false
        values:
          destination:
            server: "{{ include \"k3s.apiUrl\" . }}"
          hostnames: "{{ include \"k3s.apiHostExternalAll\" . }}"
